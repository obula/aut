package com.aut;

import android.os.RemoteException;

import com.android.uiautomator.core.UiDevice;
import com.android.uiautomator.core.UiObject;
import com.android.uiautomator.core.UiObjectNotFoundException;
import com.android.uiautomator.core.UiSelector;
import com.android.uiautomator.testrunner.UiAutomatorTestCase;

public class AutTestCase extends UiAutomatorTestCase {   
	private enum OnOff {
    	Off,
    	On
	};
	
	Uiobject getByTextAndClass(String text, String className) {
    	return new UiObject(new UiSelector().text(text).className(className)); // examplegetByTextAndClass("3", android.widget.Button.class.getName()).click();
	}
	
	public void testBluetooth() throws UiObjectNotFoundException {
        UiScrollable scroll = new UiScrollable(new UiSelector().scrollable(true));
        UiObject layout = scroll.getChildByText(new UiSelector().className(android.widget.LinearLayout.class.getName()),"Bluetooth", true);
        UiObject switchBluetooth = layout.getChild(new UiSelector().className(android.widget.Switch.class.getName()));
        assertTrue("Unable to find bluetooth switch object", switchBluetooth.exists());
        switchTo(switchBluetooth, "Bluetooth");
    }
    
    public static String getScreenshot() {
        try {
            String fname = "/sdcard/" + (new SimpleDateFormat("yyyy-MM-dd_HH-mm-ss")).format(new Date()) + ".png";
            UiDevice.getInstance().takeScreenshot(new File(fname));
            return fname;
        } catch (NoSuchMethodError e) {
            log("can't take screenshot");
            return null;
        }
    }
     public static void enterText(int numberInView, String text) throws UiObjectNotFoundException {
        UiObject textObject = new UiObject(new UiSelector().className("android.widget.EditText").instance(numberInView));
        textObject.setText(text);
    }

    private void switchTo(UiObject switchObject, String name) throws UiObjectNotFoundException {
        // Before start test ensure switch is off
        if (switchObject.isChecked()) {
            switchObject.click();
            sleep(3000);
        }
        
	
	private void setSwitchTo(OnOff value) throws UiObjectNotFoundException {
	  
	    String text;
    	UiObject switchObject = getSwitchObject();
    	for (int attempts = 0; attempts < 5; attempts++) {
        text = switchObject.getText();
        boolean switchIsOn = switchObject.isChecked();
        final OnOff result;
        if (switchIsOn) {
            result = OnOff.On;
        } else {
            result = OnOff.Off;
        }

        System.out.println("Value of switch is " + switchObject.isSelected() + ", " + text + ", " + switchIsOn);
        if (result == value) {
            System.out.println("Switch set to correct value " + result);
            break;
        } else {
            switchObject.click();
        }
    }
}

public doWifi_Off{// Validate that the package name is the expected one
    UiObject settingsValidation = new UiObject(new UiSelector()
    .packageName("com.android.settings"));
    assertTrue("Unable to detect Settings", settingsValidation.exists());
Here is the new code:

    UiSelector settingsItems = new UiSelector().className(android.widget.TextView.class.getName());
    UiObject wiFi = appViews.getChildByText(settingsItems, "Wi-Fi");

    // We can click on Wi-Fi, e.g. wiFi.clickAndWaitForNewWindow();
    // So we know we have found the Wi-Fi setting

    UiSelector switchElement = new UiSelector().className(android.widget.Switch.class.getName());
    setSwitchTo(OnOff.Off); // Or set it to On as you wish :)
}
private UiObject getSwitchObject() {
    UiObject switchObject = new UiObject(new UiSelector().className(android.widget.Switch.class.getName()));
    assertTrue("Unable to find the switch object", switchObject.exists());
    String text;
    return switchObject;
}

	public static void swipeDownNotificationBar () {
    	UiDevice deviceInstance = UiDevice.getInstance();
    	int dHeight = deviceInstance.getDisplayHeight();
    	int dWidth = deviceInstance.getDisplayWidth();
    	System.out.println("height =" +dHeight);
    	System.out.println("width =" +dWidth);
    		int xScrollPosition = dWidth/2;
    		int yScrollStop = dHeight/2;
    		UiDevice.getInstance().swipe(
        	xScrollPosition, 
        	0, 
        	xScrollPosition, 
        	yScrollStop, 
        	100
    		);
	}
	public static void logMessage(String logMessage) {
    	String strLogMessage = "*** GNM: " + logMessage;
    	System.out.println(strLogMessage);
	}  

	public void clickByDescription(String text) throws UiObjectNotFoundException {
        UiObject obj = new UiObject(new UiSelector().description(text));
        obj.clickAndWaitForNewWindow();
	}

	public void clickByText(String text) throws UiObjectNotFoundException {
        UiObject obj = new UiObject(new UiSelector().text(text));
        obj.clickAndWaitForNewWindow();
	}
	
	public void clickByTextContains(String text) throws UiObjectNotFoundException{
		UiObject obj = new UiObject(new UiSelector().textStartsWith(text));
		obj.clickAndWaitForNewWindow();
	}
	
	public void pressMenu() throws UiObjectNotFoundException {
		getUiDevice().pressMenu();
	}
	
	public void pressBack() throws UiObjectNotFoundException {
		getUiDevice().pressBack();
	}	
	
	public void pressHome() throws UiObjectNotFoundException {
		getUiDevice().pressHome();
	}
	
	public void pressSearch() throws UiObjectNotFoundException {
		getUiDevice().pressSearch();		
	}
	
	public void pressRecentApps() throws UiObjectNotFoundException, RemoteException {
		getUiDevice().pressRecentApps();		
	}
	
	public void clickOnScreen(int x,int y) throws UiObjectNotFoundException {
		getUiDevice().click(x, y);
	}
	public void clickOnText(String str) throws UiObjectNotFoundException{
		UiObject clickOnText = new UiObject(new UiSelector()
        .text(str));
		clickOnText.click();	
	}
	
	public void clickOnTextStartsWith(String str) throws UiObjectNotFoundException{
		UiObject clickOnTextStartsWith = new UiObject(new UiSelector()
        .textStartsWith(str));
		clickOnTextStartsWith.click();
	}
	
	public void clickOnDescriptionContains(String str) throws UiObjectNotFoundException{
		UiObject clickOnDescriptionContains = new UiObject(new UiSelector()
        .descriptionContains(str));
		clickOnDescriptionContains.click();
	}
	
	public void clickOnDescription(String str) throws UiObjectNotFoundException{
		UiObject clickOnDescription = new UiObject(new UiSelector()
        .description(str));
		clickOnDescription.click();
	}
	
	public void clickOnIndex(Integer index) throws UiObjectNotFoundException{
		UiObject clickOnIndex = new UiObject(new UiSelector()
        .index(index));
		clickOnIndex.click();
	}
	public void clickOnInstance(Integer instance) throws UiObjectNotFoundException{
		UiObject clickOnInstance = new UiObject(new UiSelector()
        .instance(instance));
		clickOnInstance.click();
	}
	
	public void assertCurrentPackage(String packageName){		
		UiObject packageValidation = new UiObject(new UiSelector()
        .packageName(packageName));
        assertTrue("Unable to detect package :"+packageName, 
        packageValidation.exists()); 
	}
	
	 public static String getDeviceName() throws IOException {
        try {
            return UiDevice.getInstance().getProductName();
        } catch (Error e) {
        }
        return shell("getprop ro.product.name").trim();
    }
     public static String getActivityName() {
        return UiDevice.getInstance().getCurrentActivityName();
    }
}
